---
# tasks file for roles/netology_edge
- name: Edge | Install Packages
  become: true
  ansible.builtin.apt:
    update_cache: true
    name: "{{ item }}"
    state: present
  with_items: "{{ edge_packages }}"
- name: Edge | Check if SSL certificate key exists
  become: true
  ansible.builtin.stat:
    path: "/etc/ssl/private/letsencrypt-domain.key"
  register: result
- name: Edge | Upload config
  become: true
  ansible.builtin.template:
    src: nginx.default.j2
    dest: /etc/nginx/sites-available/default
    mode: 0644
  notify: Edge | Restart NGINX
  when: not result.stat.exists
- name: Edge | Flush handler Restart NGINX
  ansible.builtin.meta: flush_handlers
- name: Edge | Register DNS
  ansible.builtin.command: curl https://api.dnsexit.com/dns/ud/?apikey={{ dnsexit_api }} -d host={{ item }}
  with_items: "{{ ssl_sites }}"
  changed_when: false
- name: Edge | Install ACME-NGINX
  become: true
  ansible.builtin.pip:
    name: acme-nginx
    executable: pip3
  notify: Edge | Get SSL certificates
- name: Edge | Pause after ACME-NGINX installation
  ansible.builtin.pause:
    seconds: 30
  when: not result.stat.exists
- name: Edge | Flush handler Get SSL certificate
  ansible.builtin.meta: flush_handlers
- name: Edge | Set NGINX_SSL config variables
  ansible.builtin.set_fact:
    ssl_certificate: "ssl_certificate /etc/ssl/private/letsencrypt-domain.pem;"
    ssl_certificate_key: "ssl_certificate_key /etc/ssl/private/letsencrypt-domain.key;"
    ssl_listen: "listen 443 ssl;"
- name: Edge | Upload SSL config
  become: true
  ansible.builtin.template:
    src: nginx.default.j2
    dest: /etc/nginx/sites-available/default
    mode: 0644
  notify: Edge | Restart NGINX
- name: Edge | Config Tinyproxy
  become: true
  ansible.builtin.template:
    src: tinyproxy.conf.j2
    dest: /etc/tinyproxy/tinyproxy.conf
    mode: 0644
  notify: Edge | Restart Tinyproxy
